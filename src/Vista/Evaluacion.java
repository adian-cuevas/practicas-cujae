/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Vista;

import Util.UserInterfaceSuport;
import Controlador.UsuarioJpaController;
import Controlador.ExperimentacionJpaController;
import Controlador.RespuestaExperimentacionJpaController;
import Controlador.ErrorJpaController;
import Controlador.exceptions.NonexistentEntityException;

import Modelo.Usuario;
import Modelo.Experimentacion;
import Modelo.RespuestaExperimentacion;
import Modelo.Error;
import Util.ReportesController;

import java.util.List;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.Query;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Eduardo
 */
public class Evaluacion extends javax.swing.JDialog {

    /**
     * Creates new form Evaluacion
     */
    private DefaultListModel modellist;
    private Usuario usuarioAutentificado = null;
    private RespuestaExperimentacion modelorespexp;
    private Experimentacion modeloexp=null;
    private UsuarioJpaController usuarioJpaController = null;
    private RespuestaExperimentacionJpaController controlrespex;
    private ErrorJpaController controlerror;
    private ExperimentacionJpaController controlexperimentacion;
    private DefaultTableModel modeltabla;
    private DefaultTableModel modeltabla1;
    private DefaultTableModel modeltabla2;
    private DefaultTableModel modeltabla3;
    private Usuario modelo;
    private ArrayList<Integer> idrespuestas_experencia;
    
    
    public Evaluacion(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        UserInterfaceSuport.centerComponent(this);
        usuarioJpaController = new UsuarioJpaController(javax.persistence.Persistence.createEntityManagerFactory("Prueba5PU"));
        controlexperimentacion=new ExperimentacionJpaController(javax.persistence.Persistence.createEntityManagerFactory("Prueba5PU"));
        controlerror=new ErrorJpaController(javax.persistence.Persistence.createEntityManagerFactory("Prueba5PU"));
        controlrespex=new RespuestaExperimentacionJpaController(javax.persistence.Persistence.createEntityManagerFactory("Prueba5PU"));
         //funciones
        //llenarLista();
        idrespuestas_experencia=new ArrayList<Integer>();
        
        habilitaPaneles();
        modeltabla1=(DefaultTableModel) jTable1.getModel();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelevaluacion = new javax.swing.JPanel();
        panelprofesor = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        spevaluacion2 = new javax.swing.JScrollPane();
        spevaluacion1 = new javax.swing.JScrollPane();
        tablausuarios = new javax.swing.JTable();
        txtevaluacionprof = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btbbuscar = new javax.swing.JButton();
        btnguardar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btncerrar = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        panelestudiante = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        spestudiante2 = new javax.swing.JScrollPane();
        spestudiante = new javax.swing.JScrollPane();
        tablaestudiante = new javax.swing.JTable();
        txtconsultarnotas = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Evaluaciones");

        panelevaluacion.setLayout(new java.awt.CardLayout());

        jTextField1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, null, new java.awt.Color(0, 0, 0)));
        jTextField1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextField1CaretUpdate(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        tablausuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre estudiante", "1er Apellido", "2do Apellido", "Nombre usuario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablausuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablausuariosMouseClicked(evt);
            }
        });
        spevaluacion1.setViewportView(tablausuarios);

        spevaluacion2.setViewportView(spevaluacion1);

        txtevaluacionprof.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtevaluacionprof.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtevaluacionprof.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)), "Evaluaci√≥n"));
        txtevaluacionprof.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtevaluacionprofKeyTyped(evt);
            }
        });

        jLabel1.setText("Nombre completo del estudiante:");

        btbbuscar.setText("Buscar");
        btbbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btbbuscarActionPerformed(evt);
            }
        });

        btnguardar.setText("Guardar");
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btbbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtevaluacionprof, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnguardar)
                .addGap(40, 40, 40))
            .addComponent(spevaluacion2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btbbuscar)))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtevaluacionprof, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnguardar)))
                .addGap(18, 18, 18)
                .addComponent(spevaluacion2, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                .addGap(23, 23, 23))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Errores por caso de estudio"));

        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jList1);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Descripci√≥n", "Equivocaciones"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jScrollPane2.setViewportView(jScrollPane1);

        btncerrar.setText("Cerrar");
        btncerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncerrarActionPerformed(evt);
            }
        });

        jButton4.setText("Mostrar");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setText("Actualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btncerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btncerrar, jButton1, jButton4});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btncerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btncerrar, jButton4});

        javax.swing.GroupLayout panelprofesorLayout = new javax.swing.GroupLayout(panelprofesor);
        panelprofesor.setLayout(panelprofesorLayout);
        panelprofesorLayout.setHorizontalGroup(
            panelprofesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelprofesorLayout.setVerticalGroup(
            panelprofesorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelprofesorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        panelevaluacion.add(panelprofesor, "card2");

        tablaestudiante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Caso de estudio"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaestudiante.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaestudianteMouseClicked(evt);
            }
        });
        spestudiante.setViewportView(tablaestudiante);

        spestudiante2.setViewportView(spestudiante);

        txtconsultarnotas.setEditable(false);
        txtconsultarnotas.setBackground(new java.awt.Color(255, 255, 255));
        txtconsultarnotas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtconsultarnotas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtconsultarnotas.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(0, 0, 0)), "Evaluaci√≥n", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        txtconsultarnotas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtconsultarnotasKeyTyped(evt);
            }
        });

        jLabel2.setText("Casos de estudios realizados");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(spestudiante2, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(txtconsultarnotas, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(spestudiante2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(txtconsultarnotas, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55))))
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Descripci√≥n", "Cantidad errores"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable2);

        jScrollPane4.setViewportView(jScrollPane5);

        jButton2.setText("Cerrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Errores cometidos por caso de estudio");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(452, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 226, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addContainerGap(32, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(57, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout panelestudianteLayout = new javax.swing.GroupLayout(panelestudiante);
        panelestudiante.setLayout(panelestudianteLayout);
        panelestudianteLayout.setHorizontalGroup(
            panelestudianteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelestudianteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelestudianteLayout.setVerticalGroup(
            panelestudianteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelestudianteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelevaluacion.add(panelestudiante, "card3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelevaluacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelevaluacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btncerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncerrarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btncerrarActionPerformed

    private void tablausuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablausuariosMouseClicked
        // TODO add your handling code here:
        txtevaluacionprof.setText("");
        idrespuestas_experencia.clear();
        modeltabla1.setNumRows(0);
        llenarLista();
    }//GEN-LAST:event_tablausuariosMouseClicked

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        //llenaTabla1ErroresP();
        JOptionPane.showMessageDialog(null,"El indice seleccionado es :"+jList1.getSelectedIndex());
        modeltabla1.setRowCount(0);
        tablaErrorProf();
        jButton4.setEnabled(true);
    }//GEN-LAST:event_jList1MouseClicked

    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
        // TODO add your handling code here:
        if (!txtevaluacionprof.getText().isEmpty()) {
                    modelorespexp.setEvaluacion(Integer.valueOf(txtevaluacionprof.getText()));
                    try {
                        controlrespex.edit(modelorespexp);
                        JOptionPane.showMessageDialog(null,"La nota fue asignada satisactoriamente");
                    } catch (NonexistentEntityException ex) {
                        Logger.getLogger(Evaluacion.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (Exception ex) {
                        Logger.getLogger(Evaluacion.class.getName()).log(Level.SEVERE, null, ex);
                    }
       modelorespexp=null;
       txtevaluacionprof.setEditable(false);
       txtevaluacionprof.setText("");
            }else{
            JOptionPane.showMessageDialog(null,"Debe asignarle primero una nota al estudiante ");
        }      
        //txtconsultarnotas.setEditable(false);
    }//GEN-LAST:event_btnguardarActionPerformed

    private void tablaestudianteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaestudianteMouseClicked
        // TODO add your handling code here:
        //muestraErroresTablas();
        
        tablaErrorEstud();
    }//GEN-LAST:event_tablaestudianteMouseClicked

    private void btbbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btbbuscarActionPerformed
        // TODO add your handling code here:
        modeltabla=(DefaultTableModel) tablausuarios.getModel();
        modeltabla.setRowCount(0);
        Query a = usuarioJpaController.getEntityManager().createQuery("SELECT a FROM Usuario a WHERE a.nombUsuario =:nombusuario ORDER BY a.nombUsuario DESC");
        a.setParameter("nombusuario", jTextField1.getText());
        List<Usuario> list=a.getResultList();
        for (Usuario usuario : list) {
           modeltabla.addRow(new Object[]{usuario.getNombre(),usuario.getApellido1er(),usuario.getApellido2do(),usuario.getNombUsuario()}); 
        }
        jTextField1.setText("");
        if (modeltabla.getRowCount()==0) {
            JOptionPane.showMessageDialog(null,"El usuario seleccionado es incorrecto");
            llenarTabla();
        }
    }//GEN-LAST:event_btbbuscarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        modeltabla.setRowCount(0);
        llenarTabla();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextField1CaretUpdate
//        // TODO add your handling code here:
//         // TODO add your handling code here:
//        if(!jTextField1.getText().isEmpty()){
//            modeltabla=(DefaultTableModel) tablausuarios.getModel();
//        modeltabla.setRowCount(0);
//        Query a = usuarioJpaController.getEntityManager().createQuery("SELECT a FROM Usuario a WHERE a.nombUsuario =:nombusuario ORDER BY a.nombUsuario DESC");
//        a.setParameter("nombusuario", jTextField1.getText());
//        List<Usuario> list=a.getResultList();
//        for (Usuario usuario : list) {
//           modeltabla.addRow(new Object[]{usuario.getNombre(),usuario.getApellido1er(),usuario.getApellido2do(),usuario.getNombUsuario()}); 
//        }
//        jTextField1.setText("");
//        if (modeltabla.getRowCount()==0) {
//            JOptionPane.showMessageDialog(null,"El usuario seleccionado es incorrecto");
//            llenarTabla();
//        }
//        }
        
        
    }//GEN-LAST:event_jTextField1CaretUpdate

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        System.out.println(getUsuario().getIdusuario());System.out.println(modelorespexp.getId());
        
        ReportesController r = new ReportesController();
        r.mostrarReporteEvaluacionProfesor(getUsuario().getIdusuario(), modelorespexp.getId());
        
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        //falta poner las comas en los datos
        if (!(Character.isLetter(c))) {//poner mayor que cero porque el lenght empieza en cero
            evt.consume();
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void txtconsultarnotasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtconsultarnotasKeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtconsultarnotasKeyTyped

    private void txtevaluacionprofKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtevaluacionprofKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (txtevaluacionprof.getText().length() > 0||!Character.isDigit(c)) {//poner mayor que cero porque el lenght empieza en cero
            evt.consume();
        }
        if (Character.getNumericValue(c)>5 || Character.getNumericValue(c)<2) {
            evt.consume();
        }
    }//GEN-LAST:event_txtevaluacionprofKeyTyped
    
    
    //funciones*******************************************************
    private void llenarLista(){//llena la lista del profesor 
        modellist=new DefaultListModel();
        usuarioAutentificado=getUsuario();
        if (usuarioAutentificado!=null) {
            List<RespuestaExperimentacion> rp=usuarioAutentificado.getRespuestaExperimentacionList();
            for (RespuestaExperimentacion respuestaExperimentacion : rp) {
                modellist.addElement(respuestaExperimentacion.getExperimentacionidExperimentacion().getNombre());
                idrespuestas_experencia.add(respuestaExperimentacion.getId());
            }
            if (modellist.getSize()>0) {
               jList1.setModel(modellist); 
            }
            else{
                
                modellist.removeAllElements();
                modeltabla1.setRowCount(0);
                jList1.setModel(modellist);
                JOptionPane.showMessageDialog(null,"El estudiante seleccionado no ha realizado ning√∫n caso de estudio");
                jList1.clearSelection();
            }

        }
        /*modellist=new DefaultListModel();
        List<Experimentacion> lista=controlexperimentacion.findExperimentacionEntities();
        for (Experimentacion experimentacion : lista) {
            modellist.addElement(experimentacion.getNombre());
        }
        jList1.setModel(modellist);*/
    }
    
    private void llenaTabla1ErroresP(){
        
//        modeloexp=controlexperimentacion.Mostrar((String) jList1.getSelectedValue());
//        List<RespuestaExperimentacion> listresp2=modeloexp.getRespuestaExperimentacionList();
//        for (RespuestaExperimentacion respuestaExperimentacion : listresp2) {
//            if (respuestaExperimentacion.getUsuarioidusuario().getNombUsuario().equals(usuarioAutentificado.getNombUsuario())) {
//                List<Error> errores=respuestaExperimentacion.getErrorList();
//                for (Error error : errores) {
//                    modeltabla1.addRow(new Object[]{error.getDescripcion(),error.getCantidad()});
//                }
//                
//            }
//        }
//        if (modeltabla1.getRowCount()>0) {
//            jTable1.setModel(modeltabla1);
//        }
//        else{
//            modeltabla1.setNumRows(0);
//            jTable1.setModel(modeltabla1);
//        }
    }
     
    private void llenarTabla(){//llena la tabla de usuarios de profesores con los estudiantes
        modeltabla=(DefaultTableModel) tablausuarios.getModel();
        List<Usuario> lista=usuarioJpaController.findUsuarioEntities();
        for (Usuario usuario : lista) {
            if (usuario.getRolIdrol().getNombRol().equals("Estudiante")) {
                modeltabla.addRow(new Object[]{usuario.getNombre(),usuario.getApellido1er(),usuario.getApellido2do(),usuario.getNombUsuario()});
            }          
        }
        tablausuarios.setModel(modeltabla);
    }
    
    public void habilitaPaneles(){
        if (AutentificacionInicialVisual.usuarioAutentificado.getRolIdrol().getNombRol().equals("Estudiante")) {
            panelestudiante.setVisible(true);
            panelprofesor.setVisible(false);
            llenarTablaEstudiante2();
            btnguardar.setVisible(false);
        }else{
            panelestudiante.setVisible(false);
            panelprofesor.setVisible(true);
            txtevaluacionprof.setEditable(false);
            llenarTabla();
        }
    }
     
    private Usuario getUsuario(){
        Usuario aux1=null;
        String user=(String) tablausuarios.getValueAt(tablausuarios.getSelectedRow(),3);
        aux1=usuarioJpaController.findByName(user);
        return aux1;
    }
    
    private void llenarTablaEstudiante2(){
        modeltabla2=(DefaultTableModel) tablaestudiante.getModel();
        if (AutentificacionInicialVisual.usuarioAutentificado!=null) {
            List<RespuestaExperimentacion> rp=AutentificacionInicialVisual.usuarioAutentificado.getRespuestaExperimentacionList();           
            for (RespuestaExperimentacion respuestaExperimentacion : rp) {
                modeltabla2.addRow(new Object[]{respuestaExperimentacion.getExperimentacionidExperimentacion().getNombre()});
                idrespuestas_experencia.add(respuestaExperimentacion.getId());
            }
            if (modeltabla2.getRowCount()>0) {
                tablaestudiante.setModel(modeltabla2);
            }
            else{
                JOptionPane.showMessageDialog(null,"El estudiante seleccionado no ha realizado ning√∫n caso de estudio");
            }
        }
    }
    
    private void muestraErroresTablas(){
        modeltabla3=(DefaultTableModel) jTable2.getModel();
        String nombre=(String) modeltabla2.getValueAt(tablaestudiante.getSelectedRow(), 0);
        modeloexp=controlexperimentacion.Mostrar(nombre);
        List<RespuestaExperimentacion> listresp2=modeloexp.getRespuestaExperimentacionList();
        for (RespuestaExperimentacion respuestaExperimentacion : listresp2) {
            if (respuestaExperimentacion.getUsuarioidusuario().getNombUsuario().equals(AutentificacionInicialVisual.usuarioAutentificado.getNombUsuario())) {
                List<Error> errores=respuestaExperimentacion.getErrorList();
                for (Error error : errores) {
                    modeltabla3.addRow(new Object[]{error.getDescripcion(),error.getCantidad()});
                    
                    System.out.println("este es "+error.getDescripcion());
                }
                txtconsultarnotas.setText(String.valueOf(respuestaExperimentacion.getEvaluacion()));
            }
        }

            jTable2.setModel(modeltabla3);
    }
    
    private  void tablaErrorEstud(){
        modelorespexp=controlrespex.findRespuestaExperimentacion(idrespuestas_experencia.get(tablaestudiante.getSelectedRow()));
        if (modelorespexp!=null) {
            modeltabla3=(DefaultTableModel) jTable2.getModel();
            modeltabla3.setRowCount(0);
            List<Error> errores=modelorespexp.getErrorList();
            for (Error error : errores) {
                modeltabla3.addRow(new Object[]{error.getDescripcion(),error.getCantidad()});
            }
            jTable2.setModel(modeltabla3);
            if (modelorespexp.getEvaluacion()!=null && modelorespexp.getEvaluacion() > 0) {
                txtconsultarnotas.setText(String.valueOf(modelorespexp.getEvaluacion()));
                txtconsultarnotas.setEditable(false);
                //btnguardar.setEnabled(false);
            }else{
                txtconsultarnotas.setText("");
                txtconsultarnotas.setEditable(false);
                //btnguardar.setEnabled(true);
            }
        }else{
            JOptionPane.showMessageDialog(null,"El caso de estudio seleccionado no se encontr√≥ en la base de datos");
        }
    }
    
    private void tablaErrorProf(){
        modelorespexp=controlrespex.findRespuestaExperimentacion(idrespuestas_experencia.get(jList1.getSelectedIndex()));
        if (modelorespexp!=null) {
            modeltabla1=(DefaultTableModel) jTable1.getModel();
            List<Error> errores=modelorespexp.getErrorList();
            for (Error error : errores) {
                modeltabla1.addRow(new Object[]{error.getDescripcion(),error.getCantidad()});
            }
            jTable1.setModel(modeltabla1);
            if (modelorespexp.getEvaluacion()!=null && modelorespexp.getEvaluacion() > 0) {
                txtevaluacionprof.setText(String.valueOf(modelorespexp.getEvaluacion()));
                txtevaluacionprof.setEditable(false);
                btnguardar.setEnabled(false);
            }else{
                txtevaluacionprof.setText("");
                txtevaluacionprof.setEditable(true);
                btnguardar.setEnabled(true);
            }
        }else{
            JOptionPane.showMessageDialog(null,"El caso de estudio seleccionado no se encontr√≥ en la base de datos");
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Evaluacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Evaluacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Evaluacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Evaluacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Evaluacion dialog = new Evaluacion(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btbbuscar;
    private javax.swing.JButton btncerrar;
    private javax.swing.JButton btnguardar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPanel panelestudiante;
    private javax.swing.JPanel panelevaluacion;
    private javax.swing.JPanel panelprofesor;
    private javax.swing.JScrollPane spestudiante;
    private javax.swing.JScrollPane spestudiante2;
    private javax.swing.JScrollPane spevaluacion1;
    private javax.swing.JScrollPane spevaluacion2;
    private javax.swing.JTable tablaestudiante;
    private javax.swing.JTable tablausuarios;
    private javax.swing.JTextField txtconsultarnotas;
    private javax.swing.JTextField txtevaluacionprof;
    // End of variables declaration//GEN-END:variables
}
