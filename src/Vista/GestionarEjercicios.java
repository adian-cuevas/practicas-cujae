/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Vista;

import Util.UserInterfaceSuport;
import Modelo.Ejercicio;
import Modelo.Tema;
import Modelo.Tipoejercicio;
import Modelo.ComplementosPregunta;
import Modelo.Repuestas;
import Modelo.Dimensiones;
import Modelo.Instrumento;
import Modelo.Posturas;
import Modelo.Puntantrp;

import Controlador.TemaJpaController;
import Controlador.TipoejercicioJpaController;
import Controlador.EjercicioJpaController;
import Controlador.DimensionesJpaController;
import Controlador.PuntantrpJpaController;
import Controlador.InstrumentoJpaController;
import Controlador.PosturasJpaController;
import Controlador.RepuestasJpaController;
import Controlador.ComplementosPreguntaJpaController;
import Controlador.exceptions.NonexistentEntityException;

import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;

import javax.swing.table.DefaultTableModel;

import javax.swing.DefaultComboBoxModel;

import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import sun.awt.image.ByteArrayImageSource;
import sun.awt.image.ToolkitImage;

/**
 *
 * @author Eduardo
 */
public class GestionarEjercicios extends javax.swing.JDialog {

	/**
	 * Creates new form NewJDialog
	 */
	private Ejercicio modelo;
	private Repuestas respuestaseleccionada;

	private TemaJpaController controltema;
	private TipoejercicioJpaController controltipoejercicio;
	private EjercicioJpaController controlejercicio;
	private DimensionesJpaController controldimensiones;
	private InstrumentoJpaController controlinstrumento;
	private PosturasJpaController controlposturas;
	private PuntantrpJpaController controlpuntos;
	private ComplementosPreguntaJpaController controlcomplementos;
	private RepuestasJpaController controlrespuestas;

	private DefaultTableModel modeltabla;
	private DefaultComboBoxModel modeltema;
	private DefaultComboBoxModel modeltipo;
//    private DefaultComboBoxModel modelinc_A;
//    private DefaultComboBoxModel modelinc_B;
//    private DefaultComboBoxModel modelinc_C;
//    private DefaultComboBoxModel modelinc_D;
//    private DefaultComboBoxModel modelinc_E;

	private JFileChooser fc;
	private byte[] imgbyte;
	private Image foto;
	private InputStream is;
	private File file = null;

	public GestionarEjercicios(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
		this.setModal(true);
		UserInterfaceSuport.centerComponent(this);
		controlejercicio = new EjercicioJpaController(
				javax.persistence.Persistence.createEntityManagerFactory("Prueba5PU"));
		controltema = new TemaJpaController(javax.persistence.Persistence.createEntityManagerFactory("Prueba5PU"));
		controltipoejercicio = new TipoejercicioJpaController(
				javax.persistence.Persistence.createEntityManagerFactory("Prueba5PU"));
		controldimensiones = new DimensionesJpaController(
				javax.persistence.Persistence.createEntityManagerFactory("Prueba5PU"));
		controlinstrumento = new InstrumentoJpaController(
				javax.persistence.Persistence.createEntityManagerFactory("Prueba5PU"));
		controlposturas = new PosturasJpaController(
				javax.persistence.Persistence.createEntityManagerFactory("Prueba5PU"));
		controlpuntos = new PuntantrpJpaController(
				javax.persistence.Persistence.createEntityManagerFactory("Prueba5PU"));
		controlcomplementos = new ComplementosPreguntaJpaController(
				javax.persistence.Persistence.createEntityManagerFactory("Prueba5PU"));
		controlrespuestas = new RepuestasJpaController(
				javax.persistence.Persistence.createEntityManagerFactory("Prueba5PU"));
		// *****************************funciones
		llenaComboboxTipoEjrcicio();
		llenaTablaEjercicios();
		llenarComboboxTema();
		habilitaComBox(false);
		habilitaTextF(false);
		btnelimina.setEnabled(false);
		btnmodificar.setEnabled(false);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jScrollPane2 = new javax.swing.JScrollPane();
		jScrollPane1 = new javax.swing.JScrollPane();
		tablaejercicios = new javax.swing.JTable();
		jPanel1 = new javax.swing.JPanel();
		jScrollPane3 = new javax.swing.JScrollPane();
		txtApregunta = new javax.swing.JTextArea();
		jLabel3 = new javax.swing.JLabel();
		lblimagen = new javax.swing.JLabel();
		jPanel2 = new javax.swing.JPanel();
		txt_A = new javax.swing.JTextField();
		txtinc_A = new javax.swing.JTextField();
		txt_B = new javax.swing.JTextField();
		txtinc_A1 = new javax.swing.JTextField();
		txtinc_A2 = new javax.swing.JTextField();
		txt_C = new javax.swing.JTextField();
		txtinc_A3 = new javax.swing.JTextField();
		txt_D = new javax.swing.JTextField();
		txt_E = new javax.swing.JTextField();
		txtinc_A4 = new javax.swing.JTextField();
		jcb_incA = new javax.swing.JComboBox();
		jcb_incB = new javax.swing.JComboBox();
		jcb_incC = new javax.swing.JComboBox();
		jcb_incD = new javax.swing.JComboBox();
		jcb_incE = new javax.swing.JComboBox();
		btninsertar = new javax.swing.JButton();
		btnelimina = new javax.swing.JButton();
		btnmodificar = new javax.swing.JButton();
		btnactualizar = new javax.swing.JButton();
		jcbtema = new javax.swing.JComboBox();
		jLabel1 = new javax.swing.JLabel();
		jcbtipo = new javax.swing.JComboBox();
		jLabel2 = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setTitle("Gesti√≥n de Ejercicios");
		setResizable(false);

		tablaejercicios.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "Pregunta", "Inciso_A", "Inciso_B", "Inciso_C", "Inciso_D", "Inciso_E" }) {
			Class[] types = new Class[] { java.lang.String.class, java.lang.Object.class, java.lang.Object.class,
					java.lang.Object.class, java.lang.Object.class, java.lang.Object.class };
			boolean[] canEdit = new boolean[] { false, false, false, false, false, false };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		tablaejercicios.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				tablaejerciciosMouseClicked(evt);
			}
		});
		jScrollPane1.setViewportView(tablaejercicios);

		jScrollPane2.setViewportView(jScrollPane1);

		jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

		jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("pregunta"));

		txtApregunta.setColumns(20);
		txtApregunta.setLineWrap(true);
		txtApregunta.setRows(5);
		txtApregunta.setWrapStyleWord(true);
		txtApregunta.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				txtApreguntaKeyTyped(evt);
			}
		});
		jScrollPane3.setViewportView(txtApregunta);

		jLabel3.setText("Imagen");

		lblimagen.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, null,
				new java.awt.Color(0, 0, 0)));
		lblimagen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
		lblimagen.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				lblimagenMouseClicked(evt);
			}
		});

		txt_A.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				txt_AKeyTyped(evt);
			}
		});

		txtinc_A.setEditable(false);
		txtinc_A.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		txtinc_A.setToolTipText("respuesta correcta");
		txtinc_A.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				txtinc_AKeyTyped(evt);
			}
		});

		txt_B.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				txt_BKeyTyped(evt);
			}
		});

		txtinc_A1.setEditable(false);
		txtinc_A1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		txtinc_A1.setToolTipText("respuesta correcta");
		txtinc_A1.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				txtinc_A1KeyTyped(evt);
			}
		});

		txtinc_A2.setEditable(false);
		txtinc_A2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		txtinc_A2.setToolTipText("respuesta correcta");
		txtinc_A2.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				txtinc_A2KeyTyped(evt);
			}
		});

		txt_C.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				txt_CKeyTyped(evt);
			}
		});

		txtinc_A3.setEditable(false);
		txtinc_A3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		txtinc_A3.setToolTipText("respuesta correcta");
		txtinc_A3.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				txtinc_A3KeyTyped(evt);
			}
		});

		txt_D.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				txt_DKeyTyped(evt);
			}
		});

		txt_E.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				txt_EKeyTyped(evt);
			}
		});

		txtinc_A4.setEditable(false);
		txtinc_A4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
		txtinc_A4.setToolTipText("respuesta correcta");
		txtinc_A4.addKeyListener(new java.awt.event.KeyAdapter() {
			public void keyTyped(java.awt.event.KeyEvent evt) {
				txtinc_A4KeyTyped(evt);
			}
		});

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2.setLayout(jPanel2Layout);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout
						.createSequentialGroup().addGap(7, 7, 7).addGroup(jPanel2Layout
								.createParallelGroup(
										javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel2Layout.createSequentialGroup()
										.addComponent(txtinc_A, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(6, 6, 6)
										.addComponent(txt_A, javax.swing.GroupLayout.PREFERRED_SIZE, 652,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(6, 6, 6).addComponent(jcb_incA, javax.swing.GroupLayout.PREFERRED_SIZE,
												168, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(jPanel2Layout.createSequentialGroup()
										.addComponent(txtinc_A1, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(6, 6, 6)
										.addComponent(txt_B, javax.swing.GroupLayout.PREFERRED_SIZE, 652,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(6, 6, 6).addComponent(jcb_incB, javax.swing.GroupLayout.PREFERRED_SIZE,
												168, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(jPanel2Layout.createSequentialGroup()
										.addComponent(txtinc_A2, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(6, 6, 6)
										.addComponent(txt_C, javax.swing.GroupLayout.PREFERRED_SIZE, 652,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(6, 6, 6).addComponent(jcb_incC, javax.swing.GroupLayout.PREFERRED_SIZE,
												168, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(jPanel2Layout.createSequentialGroup()
										.addComponent(txtinc_A3, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(6, 6, 6)
										.addComponent(txt_D, javax.swing.GroupLayout.PREFERRED_SIZE, 652,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(6, 6, 6).addComponent(jcb_incD, javax.swing.GroupLayout.PREFERRED_SIZE,
												168, javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(jPanel2Layout.createSequentialGroup()
										.addComponent(txtinc_A4, javax.swing.GroupLayout.PREFERRED_SIZE, 34,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(6, 6, 6)
										.addComponent(txt_E, javax.swing.GroupLayout.PREFERRED_SIZE, 652,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(6, 6, 6).addComponent(jcb_incE, javax.swing.GroupLayout.PREFERRED_SIZE,
												168, javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel2Layout.createSequentialGroup().addGap(11, 11, 11).addGroup(jPanel2Layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(txtinc_A, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGroup(jPanel2Layout.createSequentialGroup().addGap(1, 1, 1)
								.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(txt_A, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(jcb_incA, javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE))))
						.addGap(9, 9, 9)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(txtinc_A1, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(jPanel2Layout.createSequentialGroup().addGap(1, 1, 1)
										.addGroup(jPanel2Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(txt_B, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jcb_incB, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
														javax.swing.GroupLayout.PREFERRED_SIZE))))
						.addGap(6, 6, 6)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(txtinc_A2, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(jPanel2Layout.createSequentialGroup().addGap(1, 1, 1)
										.addGroup(jPanel2Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(txt_C, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jcb_incC, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
														javax.swing.GroupLayout.PREFERRED_SIZE))))
						.addGap(6, 6, 6)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(txtinc_A3, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(jPanel2Layout.createSequentialGroup().addGap(1, 1, 1)
										.addGroup(jPanel2Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(txt_D, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jcb_incD, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
														javax.swing.GroupLayout.PREFERRED_SIZE))))
						.addGap(6, 6, 6)
						.addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(txtinc_A4, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(jPanel2Layout.createSequentialGroup().addGap(1, 1, 1)
										.addGroup(jPanel2Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(txt_E, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jcb_incE, javax.swing.GroupLayout.PREFERRED_SIZE, 28,
														javax.swing.GroupLayout.PREFERRED_SIZE))))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] { jcb_incA, txt_A });

		btninsertar.setText("Insertar");
		btninsertar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btninsertarActionPerformed(evt);
			}
		});

		btnelimina.setText("Eliminar");
		btnelimina.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btneliminaActionPerformed(evt);
			}
		});

		btnmodificar.setText("Modificar");
		btnmodificar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnmodificarActionPerformed(evt);
			}
		});

		btnactualizar.setText("Actualizar");
		btnactualizar.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnactualizarActionPerformed(evt);
			}
		});

		jLabel1.setText("Tema");

		jcbtipo.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jcbtipoActionPerformed(evt);
			}
		});

		jLabel2.setText("Tipo");

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel1Layout.createSequentialGroup().addGap(10, 10, 10).addComponent(
										jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 883,
										javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(jPanel1Layout.createSequentialGroup().addGap(20, 20, 20)
										.addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(6, 6, 6)
										.addComponent(lblimagen, javax.swing.GroupLayout.PREFERRED_SIZE, 165,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(93, 93, 93)
										.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(10, 10, 10)
										.addComponent(jcbtema, javax.swing.GroupLayout.PREFERRED_SIZE, 135,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(133, 133, 133)
										.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGap(10, 10, 10).addComponent(jcbtipo,
												javax.swing.GroupLayout.PREFERRED_SIZE, 135,
												javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jPanel2,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE))
								.addGroup(jPanel1Layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE)
										.addComponent(btninsertar)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(btnelimina)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(btnmodificar)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(btnactualizar)))
						.addContainerGap()));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addGap(11, 11, 11)
						.addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 73,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(11, 11, 11)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(
										jPanel1Layout.createSequentialGroup().addGap(79, 79, 79).addComponent(jLabel3))
								.addComponent(lblimagen, javax.swing.GroupLayout.PREFERRED_SIZE, 167,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(jPanel1Layout.createSequentialGroup().addGap(73, 73, 73).addComponent(jLabel1,
										javax.swing.GroupLayout.PREFERRED_SIZE, 22,
										javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(jPanel1Layout.createSequentialGroup().addGap(67, 67, 67).addComponent(jcbtema,
										javax.swing.GroupLayout.PREFERRED_SIZE, 34,
										javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(jPanel1Layout.createSequentialGroup().addGap(67, 67, 67).addComponent(jLabel2,
										javax.swing.GroupLayout.PREFERRED_SIZE, 34,
										javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(jPanel1Layout.createSequentialGroup().addGap(67, 67, 67).addComponent(jcbtipo,
										javax.swing.GroupLayout.PREFERRED_SIZE, 34,
										javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addGap(18, 18, 18)
						.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, Short.MAX_VALUE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(btnmodificar).addComponent(btnactualizar).addComponent(btnelimina)
								.addComponent(btninsertar))
						.addContainerGap()));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jPanel1,
						javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void txtinc_AKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtinc_AKeyTyped
		// TODO add your handling code here:
		char c = evt.getKeyChar();
		System.out.println(evt.getKeyChar() + "\n");
		if (txtinc_A.getText().length() > 0) {// poner mayor que cero porque el lenght empieza en cero
			evt.consume();
		} else if (((c == 'f') || (c == 'F') || (c == 'v') || (c == 'V')) && jcbtipo.getSelectedItem().equals("v_f")) {
			if ((c == 'f') || (c == 'F')) {
				evt.setKeyChar('F');
			} else {
				evt.setKeyChar('V');
			}
		} else if (((c == 'x') || (c == 'X')) && jcbtipo.getSelectedItem().equals("marca_x")) {// falta comprobar el
																								// tipo de ejercicio
			evt.setKeyChar('X');
		} else {
			evt.consume();
		}
		/*
		 * else if(!((Character.isLetter(c)|| Character.isDigit(c)|| (c ==
		 * KeyEvent.VK_BACK_SPACE) || (c == KeyEvent.VK_DELETE)|| c == KeyEvent.VK_SLASH
		 * || c == KeyEvent.VK_BACK_SLASH || (Character.isWhitespace(c))
		 * ))){evt.consume(); e.setKeyChar(Character.toUpperCase(c));ver }
		 */
	}// GEN-LAST:event_txtinc_AKeyTyped

	private void txtinc_A1KeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtinc_A1KeyTyped
		// TODO add your handling code here:
		char c = evt.getKeyChar();
		if (txtinc_A1.getText().length() > 0) {// poner mayor que cero porque el lenght empieza en cero
			evt.consume();
		} else if (((c == 'f') || (c == 'F') || (c == 'v') || (c == 'V')) && jcbtipo.getSelectedItem().equals("v_f")) {
			if ((c == 'f') || (c == 'F')) {
				evt.setKeyChar('F');
			} else {
				evt.setKeyChar('V');
			}
		} else if (((c == 'x') || (c == 'X')) && jcbtipo.getSelectedItem().equals("marca_x")) {// falta comprobar el
																								// tipo de ejercicio
			evt.setKeyChar('X');
		} else {
			evt.consume();
		}
	}// GEN-LAST:event_txtinc_A1KeyTyped

	private void txtinc_A2KeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtinc_A2KeyTyped
		// TODO add your handling code here:
		char c = evt.getKeyChar();
		if (txtinc_A2.getText().length() > 0) {// poner mayor que cero porque el lenght empieza en cero
			evt.consume();
		} else if (((c == 'f') || (c == 'F') || (c == 'v') || (c == 'V')) && jcbtipo.getSelectedItem().equals("v_f")) {
			if ((c == 'f') || (c == 'F')) {
				evt.setKeyChar('F');
			} else {
				evt.setKeyChar('V');
			}
		} else if (((c == 'x') || (c == 'X')) && jcbtipo.getSelectedItem().equals("marca_x")) {// falta comprobar el
																								// tipo de ejercicio
			evt.setKeyChar('X');
		} else {
			evt.consume();
		}
	}// GEN-LAST:event_txtinc_A2KeyTyped

	private void txtinc_A3KeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtinc_A3KeyTyped
		// TODO add your handling code here:
		char c = evt.getKeyChar();
		if (txtinc_A3.getText().length() > 0) {// poner mayor que cero porque el lenght empieza en cero
			evt.consume();
		} else if (((c == 'f') || (c == 'F') || (c == 'v') || (c == 'V')) && jcbtipo.getSelectedItem().equals("v_f")) {
			if ((c == 'f') || (c == 'F')) {
				evt.setKeyChar('F');
			} else {
				evt.setKeyChar('V');
			}
		} else if (((c == 'x') || (c == 'X')) && jcbtipo.getSelectedItem().equals("marca_x")) {// falta comprobar el
																								// tipo de ejercicio
			evt.setKeyChar('X');
		} else {
			evt.consume();
		}
	}// GEN-LAST:event_txtinc_A3KeyTyped

	private void txtinc_A4KeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtinc_A4KeyTyped
		// TODO add your handling code here:
		char c = evt.getKeyChar();
		if (txtinc_A4.getText().length() > 0) {// poner mayor que cero porque el lenght empieza en cero
			evt.consume();
		} else if (((c == 'f') || (c == 'F') || (c == 'v') || (c == 'V')) && jcbtipo.getSelectedItem().equals("v_f")) {
			if ((c == 'f') || (c == 'F')) {
				evt.setKeyChar('F');
			} else {
				evt.setKeyChar('V');
			}
		} else if (((c == 'x') || (c == 'X')) && jcbtipo.getSelectedItem().equals("marca_x")) {// falta comprobar el
																								// tipo de ejercicio
			evt.setKeyChar('X');
		} else {
			evt.consume();
		}
	}// GEN-LAST:event_txtinc_A4KeyTyped

	private void lblimagenMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_lblimagenMouseClicked
		// TODO add your handling code here:
		FileNameExtensionFilter filtro = new FileNameExtensionFilter("Formatos de archivo JPEG (*.JPG;*.JPEG)", "jpg",
				"jpeg");
		fc = new JFileChooser();
		fc.addChoosableFileFilter(filtro);
		fc.setDialogTitle("Abrir archivo");
		int opc = fc.showOpenDialog(this);
		if (opc == JFileChooser.APPROVE_OPTION) {
			file = fc.getSelectedFile();
			foto = getToolkit().getImage(file.getAbsolutePath());
			foto = foto.getScaledInstance(lblimagen.getWidth(), lblimagen.getHeight(), Image.SCALE_DEFAULT);
			lblimagen.setIcon(new ImageIcon(foto));
		}
	}// GEN-LAST:event_lblimagenMouseClicked

	private void tablaejerciciosMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_tablaejerciciosMouseClicked
		// TODO add your handling code here:
		muestraEjercicio();
		btnelimina.setEnabled(true);
		btnmodificar.setEnabled(true);
		btninsertar.setEnabled(false);
	}// GEN-LAST:event_tablaejerciciosMouseClicked

	private void btninsertarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btninsertarActionPerformed
		// TODO add your handling code here:
		if (!datosCompletos()) {
			ComplementosPregunta cp = new ComplementosPregunta();
			cp.setIncA(txt_A.getText());
			cp.setIncB(txt_B.getText());
			cp.setIncC(txt_C.getText());
			cp.setIncD(txt_D.getText());
			cp.setIncE(txt_E.getText());
			controlcomplementos.create(cp);
			Repuestas resp = new Repuestas();
			if (jcbtipo.getSelectedItem().equals("completar")) {
				resp.setRespuestaincA((String) jcb_incA.getSelectedItem());
				resp.setRespuestaincB((String) jcb_incB.getSelectedItem());
				resp.setRespuestaincC((String) jcb_incC.getSelectedItem());
				resp.setRespuestaincD((String) jcb_incD.getSelectedItem());
				resp.setRespuestaincE((String) jcb_incE.getSelectedItem());
			} else {
				resp.setRespuestaincA(txtinc_A.getText());
				resp.setRespuestaincB(txtinc_A1.getText());
				resp.setRespuestaincC(txtinc_A2.getText());
				resp.setRespuestaincD(txtinc_A3.getText());
				resp.setRespuestaincE(txtinc_A4.getText());
			}
			controlrespuestas.create(resp);

			Tema tm = controltema.findByName((String) jcbtema.getSelectedItem());
			Tipoejercicio tej = controltipoejercicio.findByName((String) jcbtipo.getSelectedItem());

			Ejercicio ejercicio = new Ejercicio();
			ejercicio.setPregunta(txtApregunta.getText());
			ejercicio.setComplementosPreguntaIdcomplementosPregunta(cp);
			ejercicio.setIdcomplementosRespuesta(resp);
			ejercicio.setIdtema(tm);
			ejercicio.setIdtipoejercicio(tej);

			try {
				if (file != null) {
					is = new FileInputStream(file);
					imgbyte = new byte[(int) file.length()];
					int lector = is.read(imgbyte);
					ejercicio.setFotoEjercicio(imgbyte);
				}

			} catch (FileNotFoundException ex) {
				Logger.getLogger(GestionarEjercicios.class.getName()).log(Level.SEVERE, null, ex);
			} catch (IOException ex) {
				Logger.getLogger(GestionarEjercicios.class.getName()).log(Level.SEVERE, null, ex);
			}
			controlejercicio.create(ejercicio);
			limpiaComponentes();
			limpiaComponentesRespuesta();
		}

		modeltabla.setRowCount(0);// esto es para eliminar todas las filas que ya estan en la tabla para
									// escribirlas de nuevo
		llenaTablaEjercicios();
		file = null;

	}// GEN-LAST:event_btninsertarActionPerformed

	private void btneliminaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btneliminaActionPerformed
		try {
			// TODO add your handling code here:
			controlejercicio.destroy(getEjercicio().getIdejercicio());
			controlcomplementos
					.destroy(modelo.getComplementosPreguntaIdcomplementosPregunta().getIdcomplementosPregunta());
			controlrespuestas.destroy(modelo.getIdcomplementosRespuesta().getIdrespuestas());
		} catch (Exception ex) {
			// Logger.getLogger(GestionarEjercicios.class.getName()).log(Level.SEVERE, null,
			// ex);
			JOptionPane.showMessageDialog(null, "la entidad seleccionada no se encuentra en la bd ");
		}
		modeltabla.setRowCount(0);// esto es para eliminar todas las filas que ya estan en la tabla para
									// escribirlas de nuevo
		llenaTablaEjercicios();
		file = null;
		modelo = null;
		jcbtema.setEnabled(true);
		jcbtipo.setEnabled(true);
		limpiaComponentes();
		limpiaComponentesRespuesta();
		btnelimina.setEnabled(false);
		btnmodificar.setEnabled(false);
		btninsertar.setEnabled(true);
	}// GEN-LAST:event_btneliminaActionPerformed

	private void btnactualizarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnactualizarActionPerformed
		// TODO add your handling code here:
		limpiaComponentesRespuesta();
		limpiaComponentes();
		jcbtema.setEnabled(true);
		jcbtipo.setEnabled(true);
		file = null;
		modelo = null;
		modeltabla.setRowCount(0);
		llenaTablaEjercicios();
		btnelimina.setEnabled(false);
		btnmodificar.setEnabled(false);
		btninsertar.setEnabled(true);
	}// GEN-LAST:event_btnactualizarActionPerformed

	private void btnmodificarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnmodificarActionPerformed
		// TODO add your handling code here:
		if (modelo != null) {
			try {
				modelo.setPregunta(txtApregunta.getText());
				ComplementosPregunta cp = modelo.getComplementosPreguntaIdcomplementosPregunta();
				cp.setIncA(txt_A.getText());
				cp.setIncB(txt_B.getText());
				cp.setIncC(txt_C.getText());
				cp.setIncD(txt_D.getText());
				cp.setIncE(txt_E.getText());
				controlcomplementos.edit(cp);
				Repuestas respuesta = modelo.getIdcomplementosRespuesta();
				if (jcbtipo.getSelectedItem().equals("completar")) {
					respuesta.setRespuestaincA((String) jcb_incA.getSelectedItem());
					respuesta.setRespuestaincB((String) jcb_incB.getSelectedItem());
					respuesta.setRespuestaincC((String) jcb_incC.getSelectedItem());
					respuesta.setRespuestaincD((String) jcb_incD.getSelectedItem());
					respuesta.setRespuestaincE((String) jcb_incE.getSelectedItem());
				} else {
					respuesta.setRespuestaincA(txtinc_A.getText());
					respuesta.setRespuestaincB(txtinc_A1.getText());
					respuesta.setRespuestaincC(txtinc_A2.getText());
					respuesta.setRespuestaincD(txtinc_A3.getText());
					respuesta.setRespuestaincE(txtinc_A4.getText());
				}
				controlrespuestas.edit(respuesta);
			} catch (Exception ex) {
				Logger.getLogger(GestionarEjercicios.class.getName()).log(Level.SEVERE, null, ex);
			}

			try {
				if (file != null) {
					is = new FileInputStream(file);
					imgbyte = new byte[(int) file.length()];
					int lector = is.read(imgbyte);
					modelo.setFotoEjercicio(imgbyte);
				}
				controlejercicio.edit(modelo);
			} catch (Exception ex) {
				Logger.getLogger(GestionarEjercicios.class.getName()).log(Level.SEVERE, null, ex);
			}

		} else {
			JOptionPane.showMessageDialog(null, "El ejercicio no se encuentra en la bd");
		}
		modeltabla.setRowCount(0);// esto es para eliminar todas las filas que ya estan en la tabla para
									// escribirlas de nuevo
		llenaTablaEjercicios();
		file = null;
		modelo = null;
		limpiaComponentes();
		limpiaComponentesRespuesta();
		btnelimina.setEnabled(false);
		btnmodificar.setEnabled(false);
		btninsertar.setEnabled(true);
	}// GEN-LAST:event_btnmodificarActionPerformed

	private void jcbtipoActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jcbtipoActionPerformed
		// TODO add your handling code here:
		habilitaElementosRespuestas();
	}// GEN-LAST:event_jcbtipoActionPerformed

	private void txt_AKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txt_AKeyTyped
		// TODO add your handling code here:
		char c = evt.getKeyChar();
		// falta poner las comas en los datos
		if (!(Character.isLetter(c) || Character.isWhitespace(c) || c == ';' || c == '.' || c == ',')) {// poner mayor
																										// que cero
																										// porque el
																										// lenght
																										// empieza en
																										// cero
			evt.consume();
		}
	}// GEN-LAST:event_txt_AKeyTyped

	private void txt_BKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txt_BKeyTyped
		// TODO add your handling code here:
		char c = evt.getKeyChar();
		// falta poner las comas en los datos
		if (!(Character.isLetter(c) || Character.isWhitespace(c) || c == ';' || c == '.' || c == ',')) {// poner mayor
																										// que cero
																										// porque el
																										// lenght
																										// empieza en
																										// cero
			evt.consume();
		}
	}// GEN-LAST:event_txt_BKeyTyped

	private void txt_CKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txt_CKeyTyped
		// TODO add your handling code here:
		char c = evt.getKeyChar();
		// falta poner las comas en los datos
		if (!(Character.isLetter(c) || Character.isWhitespace(c) || c == ';' || c == '.' || c == ',')) {// poner mayor
																										// que cero
																										// porque el
																										// lenght
																										// empieza en
																										// cero
			evt.consume();
		}
	}// GEN-LAST:event_txt_CKeyTyped

	private void txt_DKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txt_DKeyTyped
		// TODO add your handling code here:
		char c = evt.getKeyChar();
		// falta poner las comas en los datos
		if (!(Character.isLetter(c) || Character.isWhitespace(c) || c == ';' || c == '.' || c == ',')) {// poner mayor
																										// que cero
																										// porque el
																										// lenght
																										// empieza en
																										// cero
			evt.consume();
		}
	}// GEN-LAST:event_txt_DKeyTyped

	private void txt_EKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txt_EKeyTyped
		// TODO add your handling code here:
		char c = evt.getKeyChar();
		// falta poner las comas en los datos
		if (!(Character.isLetter(c) || Character.isWhitespace(c) || c == ';' || c == '.' || c == ',')) {// poner mayor
																										// que cero
																										// porque el
																										// lenght
																										// empieza en
																										// cero
			evt.consume();
		}
	}// GEN-LAST:event_txt_EKeyTyped

	private void txtApreguntaKeyTyped(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtApreguntaKeyTyped
		// TODO add your handling code here:
		char c = evt.getKeyChar();
		// falta poner las comas en los datos
		if (!(Character.isLetter(c) || Character.isWhitespace(c) || c == ';' || c == '.' || c == ',')) {// poner mayor
																										// que cero
																										// porque el
																										// lenght
																										// empieza en
																										// cero
			evt.consume();
		}
	}// GEN-LAST:event_txtApreguntaKeyTyped

	// ************************************************FUNCIONES
	private Ejercicio getEjercicio() {
		Ejercicio result = null;
		int aux = tablaejercicios.getSelectedRow();
		result = controlejercicio.findEjercicioEntities().get(aux);
		return result;
	}

	private void limpiaComponentesRespuesta() {
		txtinc_A.setText("");
		txtinc_A1.setText("");
		txtinc_A2.setText("");
		txtinc_A3.setText("");
		txtinc_A4.setText("");
		jcb_incA.setSelectedIndex(0);
		jcb_incB.setSelectedIndex(0);
		jcb_incC.setSelectedIndex(0);
		jcb_incD.setSelectedIndex(0);
		jcb_incE.setSelectedIndex(0);
		habilitaComBox(false);
		habilitaTextF(false);
	}

	private void llenaTablaEjercicios() {
		modeltabla = (DefaultTableModel) tablaejercicios.getModel();
		List<Ejercicio> lista = controlejercicio.findEjercicioEntities();
		for (Ejercicio ejercicio : lista) {
			ComplementosPregunta aux = ejercicio.getComplementosPreguntaIdcomplementosPregunta();
			modeltabla.addRow(new Object[] { ejercicio.getPregunta(), aux.getIncA(), aux.getIncB(), aux.getIncC(),
					aux.getIncD(), aux.getIncE() });
		}
		tablaejercicios.setModel(modeltabla);

	}

	private void llenarComboboxTema() {
		modeltema = (DefaultComboBoxModel) jcbtema.getModel();
		List<Tema> lista = controltema.findTemaEntities();
		modeltema.addElement("Seleccione");
		for (Tema tema : lista) {
			modeltema.addElement(tema.getDescripcion());
		}
		jcbtema.setModel(modeltema);
	}

	private void llenaComboboxTipoEjrcicio() {
		modeltipo = (DefaultComboBoxModel) jcbtipo.getModel();
		List<Tipoejercicio> lista = controltipoejercicio.findTipoejercicioEntities();
		modeltipo.addElement("Seleccione");
		for (Tipoejercicio tipoejercicio : lista) {
			modeltipo.addElement(tipoejercicio.getNombTipoejerc());
		}
		jcbtipo.setModel(modeltipo);
	}

	private void llenaComboxTipo(String tema1, JComboBox combo) {
		DefaultComboBoxModel aux = (DefaultComboBoxModel) combo.getModel();
		aux.removeAllElements();
		aux.addElement("Seleccione");
		if ("Dimensiones".equals(tema1)) {
			List<Dimensiones> lista = controldimensiones.findDimensionesEntities();
			for (Dimensiones dimensiones : lista) {
				aux.addElement(dimensiones.getNombmedid());
			}
		} else if ("Posturas".equals(tema1)) {
			List<Posturas> lista = controlposturas.findPosturasEntities();
			for (Posturas posturas : lista) {
				aux.addElement(posturas.getNombPostura());
			}
		} else if ("Puntos".equals(tema1)) {
			List<Puntantrp> lista = controlpuntos.findPuntantrpEntities();
			for (Puntantrp puntantrp : lista) {
				aux.addElement(puntantrp.getNombPto());
			}
		} else {
			List<Instrumento> lista = controlinstrumento.findInstrumentoEntities();
			for (Instrumento instrumento : lista) {
				aux.addElement(instrumento.getNombInstrumento());
			}
		}
		combo.setModel(aux);
	}

	private void llenaLista(DefaultComboBoxModel dcbm, List datos) {
		for (Object object : datos) {
			dcbm.addElement(object);
		}
		jcb_incA.setModel(dcbm);
		jcb_incB.setModel(dcbm);
		jcb_incC.setModel(dcbm);
		jcb_incD.setModel(dcbm);
		jcb_incE.setModel(dcbm);
	}

	private void muestraEjercicio() {
		/* Ejercicio muestra */
		modelo = getEjercicio();
		if (null != modelo) {
			txtApregunta.setText(modelo.getPregunta());
			txt_A.setText(modelo.getComplementosPreguntaIdcomplementosPregunta().getIncA());
			txt_B.setText(modelo.getComplementosPreguntaIdcomplementosPregunta().getIncB());
			txt_C.setText(modelo.getComplementosPreguntaIdcomplementosPregunta().getIncC());
			txt_D.setText(modelo.getComplementosPreguntaIdcomplementosPregunta().getIncD());
			txt_E.setText(modelo.getComplementosPreguntaIdcomplementosPregunta().getIncE());
			// hay que utilizar un try catch pq da error
			if (modelo.getFotoEjercicio() != null) {
				foto = new ToolkitImage(new ByteArrayImageSource(modelo.getFotoEjercicio()));
				foto = foto.getScaledInstance(lblimagen.getWidth(), lblimagen.getHeight(), Image.SCALE_DEFAULT);
				lblimagen.setIcon(new ImageIcon(foto));
			}
			jcbtema.setSelectedItem(modelo.getIdtema().getDescripcion());
			jcbtema.setEnabled(false);
			jcbtipo.setSelectedItem(modelo.getIdtipoejercicio().getNombTipoejerc());
			jcbtipo.setEnabled(false);
			if (modelo.getIdtipoejercicio().getNombTipoejerc().equals("completar")) {
				habilitaComBox(true);
				habilitaTextF(false);
			} else {
				habilitaTextF(true);
				habilitaComBox(false);
			}
			// habilitaComBox(false);
		} else {
			JOptionPane.showMessageDialog(null, "El ejercicio no se encuentra en la base de datos ");
		}
	}

	private void habilitaElementosRespuestas() {
		String tema = (String) jcbtipo.getSelectedItem();
		if (tema.equals("marca_x") || tema.equals("v_f")) {
			if (jcb_incA.getItemCount() > 0) {
				txtinc_A.setText("");
				txtinc_A1.setText("");
				txtinc_A2.setText("");
				txtinc_A3.setText("");
				txtinc_A4.setText("");
				jcb_incA.setSelectedIndex(0);
				jcb_incB.setSelectedIndex(0);
				jcb_incC.setSelectedIndex(0);
				jcb_incD.setSelectedIndex(0);
				jcb_incE.setSelectedIndex(0);
			}
			habilitaTextF(true);
			habilitaComBox(false);
		} else {
			habilitaComBox(true);
			habilitaTextF(false);
			txtinc_A.setText("");
			txtinc_A1.setText("");
			txtinc_A2.setText("");
			txtinc_A3.setText("");
			txtinc_A4.setText("");
			String tema1 = (String) jcbtema.getSelectedItem();
			llenaComboxTipo(tema1, jcb_incA);
			llenaComboxTipo(tema1, jcb_incB);
			llenaComboxTipo(tema1, jcb_incC);
			llenaComboxTipo(tema1, jcb_incD);
			llenaComboxTipo(tema1, jcb_incE);
		}
	}

	private void habilitaComBox(boolean valor) {
		jcb_incA.setEnabled(valor);
		jcb_incB.setEnabled(valor);
		jcb_incC.setEnabled(valor);
		jcb_incD.setEnabled(valor);
		jcb_incE.setEnabled(valor);
	}

	private void habilitaTextF(boolean valor) {
		txtinc_A.setEditable(valor);
		txtinc_A1.setEditable(valor);
		txtinc_A2.setEditable(valor);
		txtinc_A3.setEditable(valor);
		txtinc_A4.setEditable(valor);
	}

	private void limpiaComponentes() {
		txtApregunta.setText("");
		txt_A.setText("");
		txt_B.setText("");
		txt_C.setText("");
		txt_D.setText("");
		txt_E.setText("");
		jcbtema.setSelectedIndex(0);
		jcbtipo.setSelectedIndex(0);
		lblimagen.setIcon(null);
		// tablaejercicios.clearSelection();
	}

	private boolean datosCompletos() {
		boolean valor = false;
		if (txtApregunta.getText().isEmpty() || txt_A.getText().isEmpty() || txt_B.getText().isEmpty()
				|| txt_C.getText().isEmpty() || txt_D.getText().isEmpty() || txt_E.getText().isEmpty()) {
			valor = true;
			JOptionPane.showMessageDialog(null, "Usted debe completar el contenido referente al ejercicio");
		} else if (jcbtema.getSelectedItem().equals("Seleccione") || jcbtipo.getSelectedItem().equals("Selecciones")) {
			valor = true;
			JOptionPane.showMessageDialog(null,
					"Usted debe elegir un tema y un tipo de ejercicio para el correcto funcionamiento");
		} else if (!jcbtipo.getSelectedItem().equals("completar")) {
			if (jcbtipo.getSelectedItem().equals("marca_x") && txtinc_A.getText().isEmpty()
					&& txtinc_A1.getText().isEmpty() && txtinc_A2.getText().isEmpty() && txtinc_A3.getText().isEmpty()
					&& txtinc_A4.getText().isEmpty()) {
				valor = true;
				JOptionPane.showMessageDialog(null, "Usted debe seleccionar al menos un elemento");
			} else if (txtinc_A.getText().isEmpty() || txtinc_A1.getText().isEmpty() || txtinc_A2.getText().isEmpty()
					|| txtinc_A3.getText().isEmpty() || txtinc_A4.getText().isEmpty()) {
				valor = true;
				JOptionPane.showMessageDialog(null, "No pueden quedar incisos sin responder");
			}
		} else {
			if (jcb_incA.getSelectedItem().equals("Seleccione") || jcb_incB.getSelectedItem().equals("Seleccione")
					|| jcb_incC.getSelectedItem().equals("Seleccione")
					|| jcb_incD.getSelectedItem().equals("Seleccione")
					|| jcb_incE.getSelectedItem().equals("Seleccione")) {
				valor = true;
				JOptionPane.showMessageDialog(null, "No pueden quedar incisos sin responder");
			}
		}
		return valor;
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		/*
		 * try { for (javax.swing.UIManager.LookAndFeelInfo info :
		 * javax.swing.UIManager.getInstalledLookAndFeels()) { if
		 * ("Nimbus".equals(info.getName())) {
		 * javax.swing.UIManager.setLookAndFeel(info.getClassName()); break; } } } catch
		 * (ClassNotFoundException ex) {
		 * java.util.logging.Logger.getLogger(GestionarEjercicios.class.getName()).log(
		 * java.util.logging.Level.SEVERE, null, ex); } catch (InstantiationException
		 * ex) {
		 * java.util.logging.Logger.getLogger(GestionarEjercicios.class.getName()).log(
		 * java.util.logging.Level.SEVERE, null, ex); } catch (IllegalAccessException
		 * ex) {
		 * java.util.logging.Logger.getLogger(GestionarEjercicios.class.getName()).log(
		 * java.util.logging.Level.SEVERE, null, ex); } catch
		 * (javax.swing.UnsupportedLookAndFeelException ex) {
		 * java.util.logging.Logger.getLogger(GestionarEjercicios.class.getName()).log(
		 * java.util.logging.Level.SEVERE, null, ex); }
		 */
		// </editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				GestionarEjercicios dialog = new GestionarEjercicios(new javax.swing.JFrame(), true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					@Override
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnactualizar;
	private javax.swing.JButton btnelimina;
	private javax.swing.JButton btninsertar;
	private javax.swing.JButton btnmodificar;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JComboBox jcb_incA;
	private javax.swing.JComboBox jcb_incB;
	private javax.swing.JComboBox jcb_incC;
	private javax.swing.JComboBox jcb_incD;
	private javax.swing.JComboBox jcb_incE;
	private javax.swing.JComboBox jcbtema;
	private javax.swing.JComboBox jcbtipo;
	private javax.swing.JLabel lblimagen;
	private javax.swing.JTable tablaejercicios;
	private javax.swing.JTextArea txtApregunta;
	private javax.swing.JTextField txt_A;
	private javax.swing.JTextField txt_B;
	private javax.swing.JTextField txt_C;
	private javax.swing.JTextField txt_D;
	private javax.swing.JTextField txt_E;
	private javax.swing.JTextField txtinc_A;
	private javax.swing.JTextField txtinc_A1;
	private javax.swing.JTextField txtinc_A2;
	private javax.swing.JTextField txtinc_A3;
	private javax.swing.JTextField txtinc_A4;
	// End of variables declaration//GEN-END:variables
}
